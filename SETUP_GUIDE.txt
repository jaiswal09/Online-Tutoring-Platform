# Complete Setup Guide for Online Tutoring Platform
# Step-by-Step Instructions for Beginners

===============================================================================
IMPORTANT: This guide assumes you have NEVER coded before. Follow each step carefully.
===============================================================================

## PART 1: INSTALL REQUIRED SOFTWARE

### Step 1: Install Node.js
1. Go to https://nodejs.org/
2. Click the "LTS" (Long Term Support) version - it will be the green button
3. Download the installer for your operating system (Windows/Mac/Linux)
4. Run the installer and follow the installation wizard
5. Keep clicking "Next" and accept all default settings
6. When installation is complete, restart your computer

### Step 2: Verify Node.js Installation
1. On Windows: Press Windows key + R, type "cmd", press Enter
   On Mac: Press Cmd + Space, type "terminal", press Enter
   On Linux: Press Ctrl + Alt + T
2. Type this command and press Enter: node --version
3. You should see something like "v18.17.0" or similar
4. Type this command and press Enter: npm --version
5. You should see something like "9.6.7" or similar
6. If you see version numbers, Node.js is installed correctly

### Step 3: Install Git (Version Control)
1. Go to https://git-scm.com/downloads
2. Download Git for your operating system
3. Run the installer
4. Keep all default settings during installation
5. Click "Next" through all screens and then "Install"

### Step 4: Install a Code Editor (VS Code)
1. Go to https://code.visualstudio.com/
2. Click "Download for [Your Operating System]"
3. Run the installer
4. Keep all default settings
5. When installation is complete, open VS Code

===============================================================================

## PART 2: DOWNLOAD AND SETUP THE PROJECT

### Step 5: Create a Project Folder
1. Create a new folder on your Desktop called "tutoring-platform"
2. Open VS Code
3. Click "File" â†’ "Open Folder"
4. Select the "tutoring-platform" folder you just created
5. Click "Select Folder" (Windows) or "Open" (Mac)

### Step 6: Open Terminal in VS Code
1. In VS Code, click "Terminal" in the top menu
2. Click "New Terminal"
3. A terminal window will appear at the bottom of VS Code

### Step 7: Copy Project Files
1. Copy ALL the project files from this conversation into your "tutoring-platform" folder
2. Make sure you have these main folders and files:
   - backend/ (folder)
   - src/ (folder)
   - package.json (file)
   - All other files shown in the project

===============================================================================

## PART 3: INSTALL PROJECT DEPENDENCIES

### Step 8: Install Frontend Dependencies
1. In the VS Code terminal, type this command and press Enter:
   npm install

2. Wait for the installation to complete (this may take 2-5 minutes)
3. You should see "added XXX packages" when it's done

### Step 9: Install Backend Dependencies
1. In the terminal, type this command and press Enter:
   cd backend

2. Then type this command and press Enter:
   npm install

3. Wait for installation to complete
4. Go back to the main folder by typing:
   cd ..

===============================================================================

## PART 4: SETUP DATABASE

### Step 10: Setup Database
1. In the terminal, type this command and press Enter:
   npm run setup

2. This will:
   - Install backend dependencies
   - Generate database files
   - Create the database structure

3. Wait for it to complete (you'll see "Database setup complete" or similar)

===============================================================================

## PART 5: SETUP STRIPE (PAYMENT SYSTEM)

### Step 11: Create Stripe Account
1. Go to https://stripe.com/
2. Click "Start now" or "Sign up"
3. Create a free account with your email
4. Verify your email address
5. Complete the account setup (you can skip business details for testing)

### Step 12: Get Stripe API Keys
1. In your Stripe dashboard, click "Developers" in the left menu
2. Click "API keys"
3. You'll see "Publishable key" and "Secret key"
4. Click "Reveal test key" for the Secret key
5. Copy both keys (keep them safe!)

### Step 13: Add Stripe Keys to Project
1. In VS Code, open the file: backend/.env
2. Replace "your_stripe_secret_key_here" with your actual Stripe secret key
3. Replace "your_stripe_publishable_key_here" with your actual Stripe publishable key
4. Save the file (Ctrl+S on Windows, Cmd+S on Mac)

IMPORTANT: Keep these keys secret! Never share them publicly.

===============================================================================

## PART 6: RUN THE APPLICATION

### Step 14: Start the Application
1. In the VS Code terminal, make sure you're in the main project folder
2. Type this command and press Enter:
   npm run dev

3. Wait for both servers to start (this takes 30-60 seconds)
4. You should see messages like:
   - "Server running on port 5000"
   - "Local: http://localhost:5173"

### Step 15: Open the Application
1. Open your web browser (Chrome, Firefox, Safari, etc.)
2. Go to: http://localhost:5173
3. You should see the tutoring platform homepage!

===============================================================================

## PART 7: CREATE YOUR FIRST ADMIN ACCOUNT

### Step 16: Register as Admin
1. On the homepage, click "Get Started" or "Sign Up"
2. Fill out the registration form:
   - Select "Become a Tutor" (we'll change this to admin)
   - Enter your name and email
   - Create a password
   - Fill in the tutor fields (we'll fix this later)
3. Click "Create Account"

### Step 17: Make Yourself Admin (Database Fix)
IMPORTANT: This is a temporary step to create your admin account.

1. Stop the application by pressing Ctrl+C in the terminal
2. In VS Code, create a new file called "make-admin.js" in the backend folder
3. Copy this code into the file:

```javascript
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function makeAdmin() {
  // Replace 'your-email@example.com' with the email you used to register
  const email = 'your-email@example.com';
  
  try {
    const user = await prisma.user.update({
      where: { email: email },
      data: { role: 'ADMIN' }
    });
    
    console.log('User updated to admin:', user.email);
  } catch (error) {
    console.error('Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

makeAdmin();
```

4. Replace 'your-email@example.com' with your actual email
5. Save the file
6. In terminal, type: cd backend
7. Then type: node make-admin.js
8. You should see "User updated to admin: your-email@example.com"
9. Type: cd .. (to go back to main folder)
10. Delete the make-admin.js file (it's no longer needed)

### Step 18: Restart and Login as Admin
1. Start the application again: npm run dev
2. Go to http://localhost:5173
3. Click "Sign In"
4. Login with your email and password
5. You should now see the Admin Dashboard!

===============================================================================

## PART 8: TEST THE SYSTEM

### Step 19: Create Test Users
1. Open a new browser tab (keep the admin tab open)
2. Go to http://localhost:5173
3. Create a student account:
   - Click "Get Started"
   - Select "Find a Tutor"
   - Fill out the form with test data
   - Register the account
4. Repeat for a tutor account:
   - Use a different email
   - Select "Become a Tutor"
   - Fill out tutor information

### Step 20: Test Assignment Creation
1. Go back to your admin tab
2. Click on "Assignments" tab
3. Click "Create Assignment"
4. Select the student and tutor you created
5. Enter a subject (e.g., "Mathematics")
6. Set fees (e.g., Student pays $50, Tutor gets $40)
7. Click "Create Assignment"

### Step 21: Test Tutor Acceptance
1. Open another browser tab
2. Login as the tutor you created
3. You should see the assignment offer
4. Click "Accept" to accept the assignment

### Step 22: Test Student Payment
1. Open another browser tab
2. Login as the student
3. You should see the assignment with "Pay Now" button
4. Click "Pay Now" (this will redirect to Stripe - use test card 4242 4242 4242 4242)

===============================================================================

## TROUBLESHOOTING COMMON ISSUES

### Issue 1: "npm command not found"
- Solution: Node.js is not installed properly. Repeat Step 1-2.

### Issue 2: "Port 5173 is already in use"
- Solution: Close other applications using that port, or restart your computer.

### Issue 3: "Database connection error"
- Solution: Make sure you ran "npm run setup" in Step 10.

### Issue 4: "Stripe keys not working"
- Solution: Double-check your Stripe keys in backend/.env file.

### Issue 5: Application won't start
- Solution: 
  1. Close the terminal (Ctrl+C)
  2. Delete node_modules folders in both main and backend directories
  3. Run "npm install" in main folder
  4. Run "cd backend && npm install && cd .."
  5. Run "npm run setup"
  6. Run "npm run dev"

### Issue 6: Can't see admin dashboard
- Solution: Make sure you completed Step 17 to make your account an admin.

===============================================================================

## IMPORTANT NOTES FOR PRODUCTION

### Security Notes:
1. Never share your .env file or Stripe keys
2. Use strong passwords for all accounts
3. This setup is for DEVELOPMENT only - not ready for real users yet

### For Real Deployment:
1. You'll need a proper hosting service (like Heroku, AWS, or DigitalOcean)
2. You'll need a real database (PostgreSQL on a server)
3. You'll need to configure Stripe for live payments
4. You'll need proper domain and SSL certificates

### Getting Help:
1. Check the terminal for error messages
2. Make sure all steps were followed exactly
3. Restart the application if something seems broken
4. Check that all files are in the correct folders

===============================================================================

## DAILY USAGE (After Initial Setup)

### To Start Working:
1. Open VS Code
2. Open your tutoring-platform folder
3. Open terminal in VS Code
4. Type: npm run dev
5. Go to http://localhost:5173 in your browser

### To Stop Working:
1. In the terminal, press Ctrl+C
2. Close VS Code
3. Close your browser tabs

### To Resume Later:
1. Just repeat the "To Start Working" steps above

===============================================================================

CONGRATULATIONS! 
Your tutoring platform is now running. You can create students, tutors, assignments, and test the entire workflow.

Remember: This is a development version. For real users, you'll need proper hosting and security measures.

===============================================================================